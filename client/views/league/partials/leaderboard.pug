include ../../nba/mixins/playerListing

- const takenPlayers = rosters.reduce((taken, roster) => taken.concat(roster.players), start = [])
- const userRoster = rosters.filter(roster => roster.user._id.equals(user._id))[0]
- const upcomingDays = upcomingGames.map((g, i) => { return helpers.moment().add(i, 'days')})

div(class=(rosters[0] && rosters[0].score > 0 ? 'show-winning' : ''))
  each roster in rosters 
    .member-card.bg-light.mb-3
      if !league.drafting
        a.link-discreet(href=`#${roster.user.username}-roster`, data-toggle="collapse")
          .member-overview.d-flex.flex-row.justify-content-start.align-items-center
            .p-3
              h2.my-0= roster.score
            .py-3
              img.profile-picture.rounded-circle(src=helpers.userPhoto(roster.user))
            .p-3
              h3.font-weight-normal.my-0= roster.user.username
      .collapse(id=`${roster.user.username}-roster`, class=(league.drafting ? "show" : ""))
        if league.drafting
          h5.text-center.my-0.py-3.faded-2 MY DRAFT LIST
        each player in roster.players
          +playerListing(player, showArrows = league.drafting)
        - league.rosterSize = !league.drafting ? league.rosterSize : 1
        if roster.players.length < league.rosterSize
          - let emptySpots = league.rosterSize - roster.players.length
          while emptySpots
            +playerListing()
            - emptySpots--

  include ../../nba/partials/playerModals
