extends base
include ../nba/mixins/playerListing

block dynamic
  - const takenPlayers = rosters.reduce((taken, roster) => taken.concat(roster.players), start = [])
  - const userRoster = rosters.filter(roster => roster.user._id.equals(user._id))[0]
  - const upcomingDays = upcomingGames.map((g, i) => { return helpers.moment().add(i, 'days')})

  div(class=(rosters[0] && rosters[0].score > 0 ? 'show-winning' : ''))
    each roster in rosters 
      .member__card.bg-light.mb-3
        if !league.drafting
          a.link-discreet(href=`#${roster.user.username}-roster`, data-toggle="collapse")
            .d-flex.flex-row.align-items-center.py-2.px-3.member__overview
              img.member__picture.rounded-circle(src=helpers.userPhoto(roster.user))
              h3.px-3.my-0.flex-grow.font-weight-normal= roster.user.username
              h2.my-0= roster.score
        .collapse(id=`${roster.user.username}-roster`, class=(league.drafting ? "show" : ""))
          if league.drafting
            .mb-5
              h5.text-center.my-0.py-2.faded-2 Auto Draft
              - const isoStart = helpers.moment(league.start).toISOString()
              #countdown-timer.py-2.mb-0.text-center.d-flex.justify-content-center(data-start=isoStart)
                - const timeSegments = ['days', 'hours', 'minutes', 'seconds']
                each segment in timeSegments
                  .d-flex.flex-column.text-center.mx-4(class=segment)
                    h4.mb-0.value
                    .faded-2.text-center.text-md.text-capitalize= segment
            h5.text-center.my-0.py-3.faded-2 MY DRAFT LIST
          each player in roster.players
            +playerListing(player, showArrows = league.drafting)
          - const displaySpots = !league.drafting ? league.rosterSize : 1
          if roster.players.length < displaySpots
            - let emptySpots = displaySpots - roster.players.length
            while emptySpots
              +playerListing()
              - emptySpots--